the ''matrix_divided '' module
================================================
using ''matrix_divided'' and testing it
------------------------------------------------
importing the function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test (1) normal matrix of ints:

>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[[0.33], [0.67], [1.0]], [[1.33], [1.67], [2.0]]]


test (2) matrix of floats:

>>> matrix = [
... [1.5, 2.6, 3.9],
... [4.4, 5.3, 6.5]
... ]
>>> matrix_divided(matrix, 3)
[[[0.5], [0.87], [1.3]], [[1.47], [1.77], [2.17]]]

test (2) matrix of floats and ints:

>>> matrix = [
... [1, 2, 3.9],
... [4.4, 5, 6.5]
... ]
>>> matrix_divided(matrix, 3)
[[[0.33], [0.67], [1.3]], [[1.47], [1.67], [2.17]]]


test (3) matrix with different sizes:
>>> matrix = [
... [1, 2, 3.9, 4],
... [4.4, 5, 6.5]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> 

test (4) divide by 0:
>>> matrix = [
... [1, 2, 3.9],
... [4.4, 5, 6.5]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


Test (5) test with wrong types of elements :

>>> matrix = [
... [1, "string", 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
