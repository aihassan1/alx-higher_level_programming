test case for task 1
---------------------------

case 0: import
>>> MyList = __import__('1-my_list').MyList
>>>
-------------------------------------------
    
test 1 normal numbers:

>>> class MyList(list):
...     def print_sorted(self):
...         sorted_list = sorted(self)
...         print(sorted_list)
... 
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]



test2 0 ele:

>>> class MyList(list):
...     def print_sorted(self):
...         sorted_list = sorted(self)
...         print(sorted_list)
... 
>>> new_list = MyList()
>>> new_list.print_sorted()
[]


test 3 one ele:

>>> class MyList(list):
...     def print_sorted(self):
...         sorted_list = sorted(self)
...         print(sorted_list)
... 
>>> x_list = MyList()
>>> x_list.append(1)
>>> x_list.print_sorted()
[1]




TEST 4 NEGATIVE NUMBERS:
>>> my_list = MyList()
>>> my_list.append(-5)
>>> my_list.append(0)
>>> my_list.append(-1)
>>> my_list.append(-3)
>>> my_list.print_sorted()
[-5, -3, -1, 0]


test 5: passed a list

>>> a = [1, 9, 4]
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[1, 4, 9]
>>>

test 6: non defined object

>>> mylist.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'mylist' is not defined
>>> 


test 7: same number

>>> my_list2 = MyList()
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.print_sorted()
[1, 1, 1, 1]
>>>

test 8: parent object

>>> my_list = [1, 2, 3]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'
>>>